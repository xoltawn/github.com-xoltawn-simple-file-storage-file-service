// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/xoltawn/simple-file-storage-file-service/domain (interfaces: FileStorage)

// Package mock_domain is a generated GoMock package.
package mock_domain

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/xoltawn/simple-file-storage-file-service/domain"
)

// MockFileStorage is a mock of FileStorage interface.
type MockFileStorage struct {
	ctrl     *gomock.Controller
	recorder *MockFileStorageMockRecorder
}

// MockFileStorageMockRecorder is the mock recorder for MockFileStorage.
type MockFileStorageMockRecorder struct {
	mock *MockFileStorage
}

// NewMockFileStorage creates a new mock instance.
func NewMockFileStorage(ctrl *gomock.Controller) *MockFileStorage {
	mock := &MockFileStorage{ctrl: ctrl}
	mock.recorder = &MockFileStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFileStorage) EXPECT() *MockFileStorageMockRecorder {
	return m.recorder
}

// RemoveFiles mocks base method.
func (m *MockFileStorage) RemoveFiles(arg0 context.Context, arg1 []*domain.File) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveFiles", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveFiles indicates an expected call of RemoveFiles.
func (mr *MockFileStorageMockRecorder) RemoveFiles(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveFiles", reflect.TypeOf((*MockFileStorage)(nil).RemoveFiles), arg0, arg1)
}

// SaveFile mocks base method.
func (m *MockFileStorage) SaveFile(arg0 context.Context, arg1 []byte, arg2 *domain.File, arg3 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveFile", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveFile indicates an expected call of SaveFile.
func (mr *MockFileStorageMockRecorder) SaveFile(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveFile", reflect.TypeOf((*MockFileStorage)(nil).SaveFile), arg0, arg1, arg2, arg3)
}
