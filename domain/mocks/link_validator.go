// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/xoltawn/simple-file-storage-file-service/domain (interfaces: LinkValidator)

// Package mock_domain is a generated GoMock package.
package mock_domain

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLinkValidator is a mock of LinkValidator interface.
type MockLinkValidator struct {
	ctrl     *gomock.Controller
	recorder *MockLinkValidatorMockRecorder
}

// MockLinkValidatorMockRecorder is the mock recorder for MockLinkValidator.
type MockLinkValidatorMockRecorder struct {
	mock *MockLinkValidator
}

// NewMockLinkValidator creates a new mock instance.
func NewMockLinkValidator(ctrl *gomock.Controller) *MockLinkValidator {
	mock := &MockLinkValidator{ctrl: ctrl}
	mock.recorder = &MockLinkValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLinkValidator) EXPECT() *MockLinkValidatorMockRecorder {
	return m.recorder
}

// IsLink mocks base method.
func (m *MockLinkValidator) IsLink(arg0 string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsLink", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsLink indicates an expected call of IsLink.
func (mr *MockLinkValidatorMockRecorder) IsLink(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsLink", reflect.TypeOf((*MockLinkValidator)(nil).IsLink), arg0)
}
